-b Make backup files. That is, when patching a file, rename or copy the original instead of removing it. See the [1m-V [22mor [1mversion-control [22moption for details about how backup file names are determined.
-B pref Use the [1msimple [22mmethod to determine backup file names (see the [1m-V [4m[22mmethod[24m or [1mversion-control [4m[22mmethod[24m option), and append [4mpref[24m to a file name when generating its backup file name. For example, with [1m-B /junk/ [22mthe simple backup file name for [1msrc/patch/util.c [22mis [1m/junk/src/patch/util.c[22m.
-c Interpret the patch file as a ordinary context diff.
-D define Use the [1m#ifdef [22m... [1m#endif [22mconstruct to mark changes, with [4mdefine[24m as the differentiating symbol.
-d dir Change to the directory [4mdir[24m immediately, before doing anything else.
-e Interpret the patch file as an [1med [22mscript.
-E Remove output files that are empty after the patches have been applied. Normally this option is unnecessary, since [1mpatch [22mcan examine the timestamps on the header to determine whether a file should exist after patching. However, if the input is not a context diff or if [1mpatch [22mis conforming to POSIX, [1mpatch [22mdoes not remove empty patched files unless this option is given. When [1mpatch [22mremoves a file, it also attempts to remove any empty ancestor directories.
-f Assume that the user knows exactly what he or she is doing, and do not ask any questions. Skip patches whose headers do not say which file is to be patched.
-F num Set the maximum fuzz factor. This option only applies to diffs that have context, and causes [1mpatch [22mto ignore up to that many lines of context in looking for places to install a hunk. Note that a larger fuzz factor increases the odds of a faulty patch. The default fuzz factor is 2. A fuzz factor greater than or equal to the number of lines of context in the context diff, ordinarily 3, ignores all context.
-g num This option controls [1mpatch[22m's actions when a file is under RCS or SCCS control, and does not exist or is read-only and matches the default version, or when a file is under ClearCase or Perforce control and does not exist. If [4mnum[24m is positive, [1mpatch [22mgets (or checks out) the file from the revision control system.
-i patchfile Read the patch from [4mpatchfile[24m. If [4mpatchfile[24m is [1m-[22m, read from standard input, the default.
-l Match patterns loosely, in case tabs or spaces have been munged in your files. Any sequence of one or more blanks in the patch file matches any sequence in the original file, and sequences of blanks at the ends of lines are ignored. Normal characters must still match exactly. Each line of the context must still match a line in the original file.
-n Interpret the patch file as a normal diff.
-N When a patch does not apply, patch usually checks if the patch looks like it has been applied already by trying to reverse-apply the first hunk. The [1mforward [22moption prevents that. See also [1m-R[22m.
-o outfile Send output to [4moutfile[24m instead of patching files in place. Do not use this option if [4moutfile[24m is one of the files to be patched. When [4moutfile[24m is [1m-[22m, send output to standard output, and send any messages that would usually go to standard output to standard error.
-pnum Strip the smallest prefix containing [4mnum[24m leading slashes from each file name found in the patch file. A sequence of one or more adjacent slashes is counted as a single slash. This controls how file names found in the patch file are treated, in case you keep your files in a different directory than the person who sent out the patch. For example, supposing the file name in the patch file was [1m/u/howard/src/blurfl/blurfl.c[0m setting [1m-p0 [22mgives the entire file name unmodified, [1m-p1 [22mgives [1mu/howard/src/blurfl/blurfl.c[0m without the leading slash, [1m-p4 [22mgives [1mblurfl/blurfl.c[0m and not specifying [1m-p [22mat all just gives you [1mblurfl.c[22m. Whatever you end up with is looked for either in the current directory, or the directory specified by the [1m-d [22moption.
-R Assume that this patch was created with the old and new files swapped. (Yes, I'm afraid that does happen occasionally, human nature being what it is.) [1mpatch [22mattempts to swap each hunk around before applying it. Rejects come out in the swapped format. The [1m-R [22moption does not work with [1med [22mdiff scripts because there is too little information to reconstruct the reverse operation. If the first hunk of a patch fails, [1mpatch [22mreverses the hunk to see if it can be applied that way. If it can, you are asked if you want to have the [1m-R [22moption set. If it can't, the patch continues to be applied normally. (Note: this method cannot detect a reversed patch if it is a normal diff and if the first command is an append (i.e. it should have been a delete) since appends always succeed, due to the fact that a null context matches anywhere. Luckily, most patches add or change lines rather than delete them, so most reversed normal diffs begin with a delete, which fails, triggering the heuristic.)
-r rejectfile Put rejects into [4mrejectfile[24m instead of the default [1m.rej [22mfile. When [4mrejectfile[24m is [1m-[22m, discard rejects.
-s Work silently, unless an error occurs.
-T Set the modification and access times of patched files from timestamps given in context diff headers. Unless specified in the timestamps, assume that the context diff headers use local time. Use of this option with timestamps that do not include time zones is not recommended, because patches using local time cannot easily be used by people in other time zones, and because local timestamps are ambiguous when local clocks move backwards during daylight-saving time adjustments. Make sure that timestamps include time zones, or generate patches with UTC and use the [1m-Z [22mor [1mset-utc [22moption instead.
-t Suppress questions like [1m-f[22m, but make some different assumptions: skip patches whose headers do not contain file names (the same as [1m-f[22m).
-u Interpret the patch file as a unified context diff.
-V method Use [4mmethod[24m to determine backup file names. The method can also be given by the [1mPATCH_VERSION_CONTROL [22m(or, if that's not set, the [1mVERSION_CONTROL[22m) environment variable, which is overridden by this option. The method does not affect whether backup files are made.
-v Print out [1mpatch[22m's revision header and patch level, and exit.
-x num Set internal debugging flags of interest only to [1mpatch [22mpatchers.
-Y pref Use the [1msimple [22mmethod to determine backup file names (see the [1m-V [4m[22mmethod[24m or [1mversion-control [4m[22mmethod[24m option), and prefix [4mpref[24m to the basename of a file name when generating its backup file name. For example, with [1m-Y .del/ [22mthe simple backup file name for [1msrc/patch/util.c [22mis [1msrc/patch/.del/util.c[22m.
-Z Set the modification and access times of patched files from timestamps given in context diff headers. Unless specified in the timestamps, assume that the context diff headers use Coordinated Universal Time (UTC, often known as GMT). Also see the [1m-T [22mor [1mset-time [22moption. The [1m-Z [22mor [1mset-utc [22mand [1m-T [22mor [1mset-time [22moptions normally refrain from setting a file's time if the file's original time does not match the time given in the patch header, or if its contents do not match the patch exactly. However, if the [1m-f [22mor [1mforce [22moption is given, the file time is set regardless. Due to the limitations of [1mdiff [22moutput format, these options cannot update the times of files whose contents have not changed. Also, if you use these options, you should remove (e.g. with [1mmake clean[22m) all files that depend on the patched files, so that later invocations of [1mmake [22mdo not get confused by the patched files' times.
-z suffix Use the [1msimple [22mmethod to determine backup file names (see the [1m-V [4m[22mmethod[24m or [1mversion-control [4m[22mmethod[24m option), and use [4msuffix[24m as the suffix. For example, with [1m-z - [22mthe backup file name for [1msrc/patch/util.c [22mis [1msrc/patch/util.c-[22m.
