--attr-source=<tree-ish>=Read gitattributes from <tree-ish> instead of the worktree. See [1mgitattributes[22m(5). This is equivalent to setting the [1mGIT_ATTR_SOURCE [22menvironment variable.
--bare Treat the repository as a bare repository. If GIT_DIR environment is not set, it is set to the current working directory.
-c <name>=<value> Pass a configuration parameter to the command. The value given will override values from configuration files. The <name> is expected in the same format as listed by [4mgit[24m [4mconfig[24m (subkeys separated by dots).
--config-env=<name>=<envvar>=Like [1m-c [4m[22m<name>[24m[1m=[4m[22m<value>[24m, give configuration variable [4m<name>[24m a value, where <envvar> is the name of an environment variable from which to retrieve the value. Unlike [1m-c [22mthere is no shortcut for directly setting the value to an empty string, instead the environment variable itself must be set to the empty string. It is an error if the [4m<envvar>[24m does not exist in the environment. [4m<envvar>[24m may not contain an equals sign to avoid ambiguity with [4m<name>[24m containing one.
-C <path> Run as if git was started in [4m<path>[24m instead of the current working directory. When multiple [1m-C [22moptions are given, each subsequent non-absolute [1m-C [4m[22m<path>[24m is interpreted relative to the preceding [1m-C [4m[22m<path>[24m. If [4m<path>[24m is present but empty, e.g. [1m-C [22m"", then the current working directory is left unchanged.
--exec-path[=<path>]=Path to wherever your core Git programs are installed. This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, [4mgit[24m will print the current setting and then exit.
--git-dir=<path>=Set the path to the repository (".git" directory). This can also be controlled by setting the [1mGIT_DIR [22menvironment variable. It can be an absolute path or relative path to current working directory.
--glob-pathspecs Add "glob" magic to all pathspec. This is equivalent to setting the [1mGIT_GLOB_PATHSPECS [22menvironment variable to [1m1[22m. Disabling globbing on individual pathspecs can be done using pathspec magic ":(literal)"
--help [1m[[0;36m-h[0;1m][m Prints the synopsis and a list of the most commonly used commands. If the option [1m--all [22mor [1m-a [22mis given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.
-h Prints the synopsis and a list of the most commonly used commands. If the option [1m--all [22mor [1m-a [22mis given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.
--html-path Print the path, without trailing slash, where Gitâ€™s HTML documentation is installed and exit.
--icase-pathspecs Add "icase" magic to all pathspec. This is equivalent to setting the [1mGIT_ICASE_PATHSPECS [22menvironment variable to [1m1[22m.
--info-path Print the path where the Info files documenting this version of Git are installed and exit.
--list-cmds=<group>[,<group>...]=List commands by group. This is an internal/experimental option and may change or be removed in the future. Supported groups are: builtins, parseopt (builtin commands that use parse-options), main (all commands in libexec directory), others (all other commands in [1m$PATH [22mthat have git- prefix), list-<category> (see categories in command-list.txt), nohelpers (exclude helper commands), alias and config (retrieve command list from config variable completion.commands)
--literal-pathspecs Treat pathspecs literally (i.e. no globbing, no pathspec magic). This is equivalent to setting the [1mGIT_LITERAL_PATHSPECS [22menvironment variable to [1m1[22m.
--man-path Print the manpath (see [1mman[22m([1m1[22m)) for the man pages for this version of Git and exit.
--namespace=<path>=Set the Git namespace. See [1mgitnamespaces[22m(7) for more details. Equivalent to setting the [1mGIT_NAMESPACE [22menvironment variable.
--no-advice Disable all advice hints from being printed.
--noglob-pathspecs Add "literal" magic to all pathspec. This is equivalent to setting the [1mGIT_NOGLOB_PATHSPECS [22menvironment variable to [1m1[22m. Enabling globbing on individual pathspecs can be done using pathspec magic ":(glob)"
--no-lazy-fetch Do not fetch missing objects from the promisor remote on demand. Useful together with [1mgit cat-file -e [4m[22m<object>[24m to see if the object is locally available. This is equivalent to setting the [1mGIT_NO_LAZY_FETCH [22menvironment variable to [1m1[22m.
--no-optional-locks Do not perform optional operations that require locks. This is equivalent to setting the [1mGIT_OPTIONAL_LOCKS [22mto [1m0[22m.
--no-pager [1m[[0;36m-P[0;1m][m Do not pipe Git output into a pager.
--no-replace-objects Do not use replacement refs to replace Git objects. This is equivalent to exporting the [1mGIT_NO_REPLACE_OBJECTS [22menvironment variable with any value. See [1mgit-replace[22m(1) for more information.
--paginate [1m[[0;36m-p[0;1m][m Pipe all output into [4mless[24m (or if set, $PAGER) if standard output is a terminal. This overrides the [1mpager.[4m[22m<cmd>[24m configuration options (see the "Configuration Mechanism" section below).
-P Do not pipe Git output into a pager.
-p Pipe all output into [4mless[24m (or if set, $PAGER) if standard output is a terminal. This overrides the [1mpager.[4m[22m<cmd>[24m configuration options (see the "Configuration Mechanism" section below).
--version [1m[[0;36m-v[0;1m][m Prints the Git suite version that the [4mgit[24m program came from.
-v Prints the Git suite version that the [4mgit[24m program came from.
--work-tree=<path>=Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in [1mgit-config[22m(1) for a more detailed discussion).
